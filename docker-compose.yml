version: '3.8'

services:
  redis:
    image: redis:latest
    container_name: redis
    networks:
      - global_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 3
    ports:
      - "6379:6379"  # 外部アクセスが必要ならこれを公開

  master:
    build: .
    container_name: master
    volumes:
      - ./output:/app/output
      - ./src:/app/src
      - ./input:/app/input
    environment:
      - ROLE=master
      - PYTHONUNBUFFERED=1
    networks:
      - global_network
    depends_on:
      redis:
        condition: service_healthy
    command: python src/main.py
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  worker-1:
    build: .
    container_name: worker-1
    volumes:
      - ./output:/app/output
      - ./src:/app/src
      - ./input:/app/input
    environment:
      - ROLE=worker
      - PYTHONUNBUFFERED=1
      - WORKER_ID=1
    networks:
      - global_network
    depends_on:
      redis:
        condition: service_healthy
    command: python src/main.py

  worker-2:
    build: .
    container_name: worker-2
    volumes:
      - ./output:/app/output
      - ./src:/app/src
      - ./input:/app/input
    environment:
      - ROLE=worker
      - PYTHONUNBUFFERED=1
      - WORKER_ID=2
    networks:
      - global_network
    depends_on:
      redis:
        condition: service_healthy
    command: python src/main.py

  worker-3:
    build: .
    container_name: worker-3
    volumes:
      - ./output:/app/output
      - ./src:/app/src
      - ./input:/app/input
    environment:
      - ROLE=worker
      - PYTHONUNBUFFERED=1
      - WORKER_ID=3
    networks:
      - global_network
    depends_on:
      redis:
        condition: service_healthy
    command: python src/main.py

  worker-4:
    build: .
    container_name: worker-4
    volumes:
      - ./output:/app/output
      - ./src:/app/src
      - ./input:/app/input
    environment:
      - ROLE=worker
      - PYTHONUNBUFFERED=1
      - WORKER_ID=4
    networks:
      - global_network
    depends_on:
      redis:
        condition: service_healthy
    command: python src/main.py

networks:
  global_network:
    driver: bridge
